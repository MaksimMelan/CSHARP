using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;

namespace _0001_const
{
    internal class Program
    {
        static void Main(string[] args)
        {
            /*
             * const в языке программирования С#- это ключевое слово,используемое для констант.
             * Константа - это переменная, значение которое не может изениться после её определения.
             * Определение константы с использованием ключевого слова const происходит на этапе компиляции,
             * и значение константы должно быть известно на этапе компиляции.
             * 
             * Определиение константы с использованием const выглядит следующим образом:
             */
            const string CallFatherFrost = "Дед мороз";

            /* 
             * Требования к константам
             * 1) Константы именуются с большой буквы.
             * 2) В имени константы только первая буква каждого слова должна быть заглявная.
             * 3) Koнстанты объявляются перед блоком переменных и отделяются от них пустой строкой.
             * 4) Если константа создана для связки консольное меню + switch (case) л имени  константы добавляется Command.
             */

            /*
             * Константы не являютмя переменными и не могут быть изменены. Констнты могут быть числами, логическими
             * значениями, строками или улевыми ссылками. Не создавайте константу для предоставления сведений, которые могут 
             * изменится в любое время.
             * Непример, не используйте константное поле для хранения цены услуги, номера версии продукта или торгового названия 
             * компании.
             * 
             * На курсе "Базовый С# константы используются для связки консольное меню и switch. В остальных случаях используйте
             * переменные.
             * 
             */

            /*
             * Приемущества
             * 
             * 1) Константы повышают читаемость кода и предотвращают магические числа,
             * что делает код более понятным для разработчика.
             * 
             * 2) Четкость кода. Код становится более читабельным и понятным, так как 
             * пользователю не нужно понимать, что означает каждая переменная.
             * 
             * 3) Снижение вероятности ошибок. Значения констант не могут быть изменены,
             * пэтому код конструкции switch не нужно изменять при изменении значений 
             * переменных.
             * 
             * 4)Повышение производительности. Компьютеру не нужно тратить время на 
             * вычисление значений констант, что может ускорить работу программы.
             * 

             * 
             * Пример правильного кода:
             */

            const string CommandShowText = "1";
            const string CommandClearConsole = "2";
            const string CommandExit = "3";

            bool isWork = true;
            string userInput;

            while (isWork)
            {
                Console.WriteLine($"{CommandShowText} Показать текст");
                Console.WriteLine($"{CommandClearConsole} Очистить консоль");
                Console.WriteLine($"{CommandExit} Выход");

                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandShowText:
                        Console.WriteLine("Показ текста.");
                        break;

                    case CommandClearConsole:
                        Console.WriteLine();
                        break;

                    case CommandExit:
                        isWork = false;
                        Console.WriteLine("Программа завершена");
                        break;
                }
            }
            Console.ReadKey();
        }

            /*
             * Начиная с С#10, интерполированные  строки могут быть константами, 
             * если все используемые выражения также являются константными строками.
             * Эта функция может улучшить код, создающий константные строки:
             */
            //const string Language = "C#";
            //const string Platform = ".NET";
            //const string Version = "10.0";
            //const string FullProductName = $"{Platform} - Language: {Language} Version: {Version}";

            /*
             * Remarcks
             * 
             * Тип объявления понстанты указывает на тип членов, которые вводятся объявлением.
             * Инициализатор локально константы или констанотного поля должен быть константным выражением,
             * которое может быть неявно преобразованно в целевой тип.
             * 
             * Выражение константы  - это выражение, которое можно полностью  вычислить по время компиляции. 
             * Таким образом, единственными возможными значениями для констант ссылочных типов являются строки
             * или пустая ссылка. 
             * 
             * Объявление констант может объявлять несколько констант, например:
             */
            public const double X = 1.0, Y = 2.0, Z = 3.0;

            /*
             * Модификатор static в объявлении константы не допускается.
             * 
             * Константа может учавствовать в выражении константы следующим обарзом:
             */
            public const int C1 = 5;
            public const int C2 = C1 + 100;

        
    }
}
